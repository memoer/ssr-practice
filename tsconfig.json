{
  "compilerOptions": {
    /* Basic Options */
    // ts -> js 컴파일 시 js 버전 설정
    // es5 : () => null -> function(){return null;}
    // es6 : () => null -> () => null
    "target": "es5",
    // lib 항목을 정의하지 않는다면 target항목에서 지정한 ECMAScript의 버전에 따라 기본값이 정의됨
    // ES5 : dom, es5, scripthost
    // ES6 : dom, dom.iterable, es6, scripthost
    // 위에 target에서 설정한 ES5은 Promise가 없음 (Promise 는 ES6에서 등장)
    // Promise를 사용하려면 lib에 넣어서 설정해주어야 함.
    // url - https://norux.me/59
    "lib": ["ES5", "ES6", "DOM", "DOM.Iterable", "ESNext"],
    // ts -> js 컴파일 시 사용할 module 설정
    "module": "commonjs",
    "allowJs": true /* Allow javascript files to be compiled. */,
    "checkJs": true /* Report errors in .js files. */,
    "sourceMap": true /* Generates corresponding '.map' file. */,
    "outDir": "./build/server" /* Redirect output structure to the directory. */,
    "rootDir": "./src" /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */,
    "removeComments": true /* Do not emit comments to output. */,
    "jsx": "react",
    // "isolatedModules": true,               /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */

    /* Strict Type-Checking Options */
    "strict": true /* Enable all strict type-checking options. */,
    "noImplicitAny": true /* Raise error on expressions and declarations with an implied 'any' type. */,
    "strictNullChecks": true /* Enable strict null checks. */,
    "strictFunctionTypes": true /* Enable strict checking of function types. */,

    /* Additional Checks */
    "noUnusedParameters": true /* Report errors on unused parameters. */,
    "noImplicitReturns": true /* Report error when not all code paths in function return a value. */,

    /* Module Resolution Options */
    // https://vomvoru.github.io/blog/typescript-module-resolution/
    // import, export
    "moduleResolution": "node",
    "baseUrl": "./src" /* Base directory to resolve non-absolute module names. */,
    "allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
    // es6모듈을 사용하여 CommonJS 모듈을 가져올 수 있음
    // import * as React from "react" -> import React from "react"
    // url - https://stackoverflow.com/questions/56238356/understanding-esmoduleinterop-in-tsconfig-file
    "esModuleInterop": true,

    /* Advanced Options */
    // 파일명에 대소문자 구분하지 않아도 되는 기능 사용 여부
    "forceConsistentCasingInFileNames": true,
    // json 을 import 할 수 있게
    "resolveJsonModule": true,

    // *.d.ts 파일들의 타입 체크 skip
    // "skipLibCheck": true,
    // 각각의 .ts파일들은 반드시 export를 해주어야 함
    // All files must be modules when the '--isolatedModules' flag is provided.
    // "isolatedModules": true,
    "paths": {
      "~server/*": ["server/*"],
      "~client/*": ["client/*"]
    }
  },
  "exclude": ["node_modules", "build", "src/public"],
  "include": ["src"]
  // "files": ["global.d.ts"],
}
